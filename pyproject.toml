[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "gomoku-world"
version = "1.4.4"
description = "A modern Gomoku (Five in a Row) game platform with advanced AI and online features"
authors = [
    {name = "Gomoku World Team", email = "team@gomokuworld.com"},
]
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "Topic :: Games/Entertainment :: Board Games",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
]

dependencies = [
    "PyQt6>=6.4.0",
    "numpy>=1.21.0",
    "torch>=2.0.0",
    "requests>=2.28.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "flake8>=4.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
docs = [
    "sphinx>=7.1.2",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.24.0",
]

[project.urls]
Homepage = "https://github.com/gomokuworld/gomoku_world"
Documentation = "https://gomokuworld.readthedocs.io/"
Repository = "https://github.com/gomokuworld/gomoku_world.git"
Issues = "https://github.com/gomokuworld/gomoku_world/issues"

[project.scripts]
gomoku-server = "gomoku_world.scripts.server:main"
gomoku-client = "gomoku_world.scripts.client:main"

[tool.setuptools]
package-dir = {"" = "src"}
packages = [
    "gomoku_world",
    "gomoku_world.core",
    "gomoku_world.gui",
    "gomoku_world.network",
    "gomoku_world.utils",
    "gomoku_world.scripts",
    "gomoku_world.scripts.server",
    "gomoku_world.scripts.client",
]

[tool.setuptools.package-data]
gomoku_world = [
    "resources/**/*",
    "config/**/*.yaml",
    "config/**/*.json",
]

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["gomoku_world"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
packages = ["gomoku_world"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.coverage.run]
branch = true
source = ["src"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.pylint.messages_control]
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "C0330",  # bad-continuation
    "C0326",  # bad-whitespace
    "W0621",  # redefined-outer-name
    "W0703",  # broad-except
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "R0914",  # too-many-locals
]

[tool.pylint.format]
max-line-length = 88

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py38, py39, py310, py311
isolated_build = True

[testenv]
deps =
    -r requirements-dev.txt
commands =
    pytest {posargs:tests}
"""

[tool.setuptools_scm]
write_to = "src/gomoku_world/_version.py"
version_scheme = "post-release"
local_scheme = "node-and-date" 